version: "3"
services:
  ert-frontend:
    container_name: ert-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./frontend/src:/app/src
    networks:
      - T-WEB

  ert-backend:
    container_name: ert-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backend/.:/app/.
    command: bash -c "npm install && npm start"
    networks:
      - T-WEB
    environment:
      ACCESS_SECRET:
      REFRESH_SECRET:
    depends_on:
      # set a dependency between your service and the database: this means that your application will not run if the db service is not running, but it doesn't assure you that the dabase will be ready to accept incoming connection (so your application could crash untill the db initializes itself)
      ert-mysql:
        condition: service_healthy

  ert-mysql:
    image: mariadb:10.3
    container_name: ert-mariadb
    volumes:
      - mariadb:/var/lib/mysql/data
      - ./SQL/EpicRoadTrip.sql:/docker-entrypoint-initdb.d/EpicRoadTrip.sql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: EpicRoadTrip
    ports:
      - "3306:3306"
    networks:
      - T-WEB
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  ert-phpmyadmin:
    container_name: ert-phpmyadmin
    image: phpmyadmin
    restart: always
    ports:
      - 80:80
    environment:
      - PMA_ARBITRARY=1
    networks:
      - T-WEB

networks:
  T-WEB:
    name: T-WEB

volumes:
  mariadb:
